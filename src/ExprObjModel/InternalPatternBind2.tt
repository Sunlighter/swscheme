<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".generated.cs" #>
/*
    This file is part of Sunlit World Scheme
    http://swscheme.codeplex.com/
    Copyright (c) 2010 by Edward Kiser (edkiser@gmail.com)

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

using System;
using BigMath;
using System.Reflection;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ExprObjModel
{
    public static partial class Utils
    {
    <#
    string[] typeName = new string[]
    {
        "Byte", "Int16", "Int32", "Int64",
        "SByte", "UInt16", "UInt32", "UInt64"
    };

    for(int i =0; i < 8; ++i)
    {
    #>

        private static Option<object> Parse<#= typeName[i] #>(object input)
        {
            if (input is BigInteger)
            {
                BigInteger bInput = (BigInteger)input;
                if (bInput.FitsIn<#= typeName[i] #>)
                {
                    return new Some<object>() { value = bInput.Get<#= typeName[i] #>Value(OverflowBehavior.Wraparound) };
                }
            }
            return new None<object>();
        }
    <#
    }
    #>

    }
}
